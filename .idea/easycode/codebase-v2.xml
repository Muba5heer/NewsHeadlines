<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/newsheadlines/ExampleInstrumentedTest.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/ui/theme/Color.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/ui/theme/Shape.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/ui/theme/Theme.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/ui/theme/Type.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/ApiService.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/Articles.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/DisplayNews.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/LoginActivity.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/MainPage.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/MainViewModel.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/Model.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/News.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/RegistrationActivity.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/Source.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/User.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/UserDao.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/UserDatabase.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/java/com/example/newsheadlines/UserDatabaseHelper.kt;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/drawable/ic_launcher_background.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/drawable/news_background.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/drawable-v24/ic_launcher_foreground.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/mipmap-anydpi-v26/news.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/mipmap-anydpi-v26/news_round.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/values/colors.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/values/strings.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/values/themes.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/xml/backup_rules.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/res/xml/data_extraction_rules.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/main/AndroidManifest.xml;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main/app/src/test/java/com/example/newsheadlines/ExampleUnitTest.kt" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main&quot;:&quot;{\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;:\&quot;This file is an XML configuration for an Android adaptive icon. It does not contain any classes or functions, but rather defines the background and foreground drawables for the adaptive icon.\\n\\n`adaptive-icon`: This element specifies the configuration for an adaptive icon, which is a type of Android icon that can adapt to different screen sizes and shapes.\\n\\n`background`: This element specifies the drawable resource to be used as the background of the adaptive icon.\\n\\n`foreground`: This element specifies the drawable resource to be used as the foreground of the adaptive icon.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Shape.kt\&quot;:\&quot;This file defines the shape theme for the News Headlines app using Jetpack Compose.\\n\\n`Shapes`: Defines the rounded corner shapes for the small, medium, and large UI elements in the app.\&quot;,\&quot;/app/src/main/AndroidManifest.xml\&quot;:\&quot;This file is an Android manifest file that defines the structure and configuration of an Android application. It does not contain any classes or functions, but rather specifies the following:\\n\\n`DisplayNews`: An activity that displays news articles.\\n`RegistrationActivity`: An activity that handles user registration.\\n`MainPage`: An activity that serves as the main page of the application.\\n`LoginActivity`: An activity that handles user login and serves as the entry point of the application.\\n\\nThe manifest file also declares the necessary permissions for the application to access the internet and Wi-Fi state, and sets various application-level properties such as the app\\u0027s name, icon, and theme.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/Articles.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Articles`: A data class that represents an article, with properties for the title, description, and URL to the image.\\n\\nThis file does not contain any functions. It is a simple data class used to represent the structure of an article, likely used in a larger application that deals with news or article content.\&quot;,\&quot;/app/src/main/res/drawable/news_background.xml\&quot;:\&quot;This file appears to be an XML document defining a vector drawable for an Android application. It does not contain any classes or functions, but rather defines a set of paths and lines that make up the vector drawable. The drawable appears to be a grid-like pattern with a green background and white lines.\\n\\nThe file defines the following paths and lines:\\n\\n`path android:fillColor\\u003d\\\&quot;#3DDC84\\\&quot; android:pathData\\u003d\\\&quot;M0,0h108v108h-108z\\\&quot;`: Defines a green background for the drawable.\\n`path android:fillColor\\u003d\\\&quot;#00000000\\\&quot; android:pathData\\u003d\\\&quot;M9,0L9,108\\\&quot; android:strokeColor\\u003d\\\&quot;#33FFFFFF\\\&quot; android:strokeWidth\\u003d\\\&quot;0.8\\\&quot;`: Defines a white vertical line at the 9th pixel.\\n`path android:fillColor\\u003d\\\&quot;#00000000\\\&quot; android:pathData\\u003d\\\&quot;M19,0L19,108\\\&quot; android:strokeColor\\u003d\\\&quot;#33FFFFFF\\\&quot; android:strokeWidth\\u003d\\\&quot;0.8\\\&quot;`: Defines a white vertical line at the 19th pixel.\\n... (similar paths for the remaining vertical and horizontal lines)\\n\\nOverall, this file defines a vector drawable that can be used as an icon or background for an Android application.\&quot;,\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;:\&quot;This file is an XML configuration file for data extraction rules in Android 12 backup and restore functionality. It does not contain any classes or functions, but rather provides a template for configuring what data should be included or excluded from cloud backups and device transfers.\\n\\nThe file contains the following sections:\\n\\n`\\u003ccloud-backup\\u003e`: This section is used to configure what data should be included or excluded from cloud backups.\\n\\n`\\u003cdevice-transfer\\u003e`: This section is used to configure what data should be included or excluded from device transfers.\\n\\nThe file is intended to be customized by developers to control what data is backed up or transferred when using the Android 12 backup and restore functionality.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/RegistrationActivity.kt\&quot;:\&quot;This file contains the implementation of the `RegistrationActivity` class and the `RegistrationScreen` composable function.\\n\\n`RegistrationActivity`: This class extends `ComponentActivity` and sets up the content of the registration screen using the `RegistrationScreen` composable.\\n\\n`RegistrationScreen`: This composable function creates the user interface for the registration screen, including text fields for username, password, and email, as well as a registration button and a link to the login screen.\\n\\nThe file also includes a private function `startLoginActivity` that starts the `LoginActivity` using the provided context.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Theme.kt\&quot;:\&quot;This file defines the theme for the News Headlines app using Jetpack Compose. It includes the following:\\n\\n`DarkColorPalette`: A set of dark theme colors for the app.\\n\\n`LightColorPalette`: A set of light theme colors for the app.\\n\\n`NewsHeadlinesTheme`: A function that sets the app\\u0027s theme based on the system\\u0027s dark mode setting and applies the appropriate color palette, typography, and shapes.\\n\\nThe file does not contain any classes, but it provides a way to customize the app\\u0027s appearance and ensure a consistent look and feel across the application.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v26/news_round.xml\&quot;:\&quot;This file is an XML configuration for an adaptive icon in an Android application. It defines the background and foreground elements of the icon, which are specified as drawable resources.\\n\\n`adaptive-icon`: This is the root element that defines an adaptive icon, which is a type of Android icon that can adapt to different screen sizes and resolutions.\\n\\n`background`: This element specifies the background drawable resource for the adaptive icon.\\n\\n`foreground`: This element specifies the foreground drawable resource for the adaptive icon.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v26/news.xml\&quot;:\&quot;This file is an XML configuration for an adaptive icon in an Android application. It defines the background and foreground elements of the icon, which are specified as drawable resources.\\n\\n`adaptive-icon`: This is the root element that defines an adaptive icon, which is a type of Android icon that can adapt to different screen sizes and resolutions.\\n\\n`background`: This element specifies the background drawable resource for the adaptive icon.\\n\\n`foreground`: This element specifies the foreground drawable resource for the adaptive icon.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/UserDao.kt\&quot;:\&quot;This file defines a Data Access Object (DAO) interface for a Room database, which is used to interact with a `User` entity.\\n\\n`UserDao`: An interface that defines the CRUD (Create, Read, Update, Delete) operations for the `User` entity in the Room database.\\n\\n`getUserByEmail(email: String)`: Retrieves a `User` object from the database based on the provided email address.\\n\\n`insertUser(user: User)`: Inserts a new `User` object into the database, or replaces an existing one if a conflict occurs.\\n\\n`updateUser(user: User)`: Updates an existing `User` object in the database.\\n\\n`deleteUser(user: User)`: Deletes a `User` object from the database.\&quot;,\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;:\&quot;This file is an XML document that provides a sample backup rules file for Android applications. It is used to configure the automatic backup feature in Android, which allows users to restore their app data and settings on a new device.\\n\\nThe file does not contain any classes or functions. Instead, it provides a set of comments and example configurations for the `\\u003cfull-backup-content\\u003e` element, which is used to specify the data that should be included or excluded from the backup.\\n\\nThe main purpose of this file is to serve as a template for developers to customize the backup rules for their Android applications. By uncommented and modifying the example configurations, developers can control which data is backed up and which data is excluded from the backup process.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabase.kt\&quot;:\&quot;This file defines a Room database for a news headlines application.\\n\\n`UserDatabase`: A Room database class that stores `User` entities.\\n\\n`getDatabase`: A companion object function that provides a singleton instance of the `UserDatabase`.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/Model.kt\&quot;:\&quot;This file defines a single data class:\\n\\n`Movie`: A data class that represents a movie with a name, image URL, description, and category.\\n\\nThis file does not contain any functions. It simply defines a data class to represent movie information.\&quot;,\&quot;/app/src/main/res/values/themes.xml\&quot;:\&quot;This file does not contain any classes or functions. It is an Android resource file that defines a custom theme for the \\\&quot;NewsHeadlines\\\&quot; application. The theme is based on the `android:Theme.Material.Light.NoActionBar` theme and sets the status bar color to `@color/purple_700`.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/ApiService.kt\&quot;:\&quot;This file defines an `ApiService` interface that provides a method to retrieve news headlines from the NewsAPI.org service.\\n\\n`ApiService`: An interface that defines the API endpoint and method to retrieve news headlines.\\n\\n`getMovies()`: A suspend function that retrieves the latest news headlines from the NewsAPI.org service.\\n\\n`getInstance()`: A companion object function that creates a singleton instance of the `ApiService` interface, configuring the Retrofit library to communicate with the NewsAPI.org service.\&quot;,\&quot;/app/src/test/java/com/example/newsheadlines/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that verifies the correctness of the addition operation.\\n\\n`ExampleUnitTest`: A unit test class that contains a single test case to verify the correctness of the addition operation.\\n\\n`addition_isCorrect()`: A test function that checks if the addition of 2 and 2 is equal to 4, which is the expected result.\&quot;,\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;:\&quot;This file appears to be an Android vector drawable XML file, which defines a vector image that can be used as an app icon or other graphical element in an Android app. The file does not contain any classes or functions, but rather defines a set of paths and lines that make up the vector image.\\n\\nThe file defines a 108x108 dp vector image with a green background and a grid of white lines. The grid lines are defined using a series of `\\u003cpath\\u003e` elements, each of which specifies the start and end points of a line segment, as well as the stroke width and color.\\n\\nOverall, this file provides a vector-based representation of a simple grid-like design that can be used as an app icon or other graphical element in an Android app.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Type.kt\&quot;:\&quot;This file defines the typography styles for a Compose-based Android application. It sets the default text style for the body of the application, and provides commented-out examples for other text styles such as buttons and captions.\\n\\n`Typography`: Defines the set of Material typography styles to be used in the application.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;:\&quot;This file is an XML configuration for an Android adaptive icon. It does not contain any classes or functions, but rather defines the background and foreground drawables for the adaptive icon.\\n\\n`adaptive-icon`: This element specifies the configuration for an adaptive icon, which is a type of Android icon that can adapt to different screen sizes and shapes.\\n\\n`background`: This element specifies the drawable resource to be used as the background of the adaptive icon.\\n\\n`foreground`: This element specifies the drawable resource to be used as the foreground of the adaptive icon.\&quot;,\&quot;/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\&quot;:\&quot;This file appears to be an Android vector drawable resource file. It defines a vector graphic that can be used as an app icon or other visual asset in an Android application. The file does not contain any classes or functions, but rather defines the vector path and gradient fill for the graphic.\\n\\nThe vector graphic appears to depict a stylized Android logo or icon, with a gradient background and a white foreground shape. The file specifies the dimensions of the graphic (108dp x 108dp) and the viewport dimensions (108 x 108), as well as the path data and gradient fill for the graphic.\&quot;,\&quot;/app/src/androidTest/java/com/example/newsheadlines/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for the \\\&quot;NewsHeadlines\\\&quot; Android app. It does not contain any classes or functions, but rather a single test case that checks if the app\\u0027s package name matches the expected value.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the app\\u0027s context.\\n\\n`useAppContext()`: This test function checks if the app\\u0027s package name matches the expected value, which is \\\&quot;com.example.newsheadlines\\\&quot;.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/DisplayNews.kt\&quot;:\&quot;This file contains the implementation of the `DisplayNews` class, which is a `ComponentActivity` that displays news headlines and their corresponding images. The file also includes a `Greeting` function and a `HtmlText` function.\\n\\n`DisplayNews`: A class that extends `ComponentActivity` and displays news headlines and their corresponding images.\\n\\n`Greeting`: A function that takes a `String` parameter and displays a greeting message.\\n\\n`HtmlText`: A function that takes an HTML string and displays it in a `TextView` using the `AndroidView` composable.\\n\\nThe file also includes some Compose UI elements, such as `Surface`, `Column`, `Image`, and `Text`, to create the layout and display the news content.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/MainPage.kt\&quot;:\&quot;This file appears to be an Android Compose-based application that displays a list of news articles. Here are the classes and functions in the file:\\n\\n`MainPage`: This is the main activity class that sets up the UI and handles the display of news articles.\\n\\n`MovieList`: This function creates a lazy column that displays a list of news articles.\\n\\n`MovieItem`: This function creates a single news article item in the list, including the article\\u0027s image, title, and description.\\n\\n`HtmlText`: This function displays the article\\u0027s description using HTML formatting.\\n\\nOverall, this file is responsible for the main user interface of the news headlines application, including the display of a list of news articles and the ability to click on individual articles to view more details.\&quot;,\&quot;/app/src/main/res/values/colors.xml\&quot;:\&quot;This file does not contain any classes or functions. It is an XML resource file that defines a set of color values for an Android application. The colors defined in this file can be used throughout the application to provide a consistent visual style.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/Source.kt\&quot;:\&quot;This file defines a single data class called `Source` which represents a source of information with an `id` and a `name`.\\n\\n`Source`: A data class that represents a source of information with an `id` and a `name`.\&quot;,\&quot;/app/src/main/res/values/strings.xml\&quot;:\&quot;This file appears to be an XML resource file that defines various string resources for an Android application. It does not contain any classes or functions. Instead, it provides the following string resources:\\n\\n`app_name`: The name of the application.\\n`title_activity_main2`: The title of the `MainActivity2` activity.\\n`title_activity_main_page`: The title of the `MainPage` activity.\\n`title_activity_login`: The title of the `LoginActivity`.\\n`title_activity_registration`: The title of the `RegistrationActivity`.\\n`title_activity_display_news`: The title of the `DisplayNews` activity.\\n\\nThese string resources can be used throughout the Android application to provide consistent and localized text for various UI elements, such as activity titles, button labels, and other user-facing content.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/MainViewModel.kt\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`MainViewModel`: A ViewModel class that manages the state of a news headlines application, including a list of articles and any error messages.\\n\\n`getMovieList()`: A function that retrieves a list of news articles from an API service and updates the `movieListResponse` state variable with the results, or sets the `errorMessage` state variable if an exception occurs.\\n\\nThe file appears to be part of a news headlines application built using the Jetpack Compose framework, where the `MainViewModel` class is responsible for managing the application\\u0027s data and state.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabaseHelper.kt\&quot;:\&quot;`UserDatabaseHelper`: A class that extends `SQLiteOpenHelper` to manage a user database, including creating, upgrading, and querying the database.\\n\\n`insertUser`: Inserts a new user into the user table.\\n`getUserByUsername`: Retrieves a user by their first name.\\n`getUserById`: Retrieves a user by their ID.\\n`getAllUsers`: Retrieves all users from the user table.\\n\\nThis file defines a `UserDatabaseHelper` class that extends `SQLiteOpenHelper` to manage a user database. The class includes functions to insert new users, retrieve users by username or ID, and retrieve all users from the database.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/User.kt\&quot;:\&quot;This file defines a data class `User` that represents a user in a news headlines application. The class has the following properties:\\n\\n`User`: A data class that represents a user in the news headlines application, with properties for first name, last name, email, and password.\\n\\nThe file does not contain any functions, but rather defines the structure of the `User` class, which can be used to store user information in a Room database.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Color.kt\&quot;:\&quot;This file defines the color palette for the News Headlines app using the Compose UI framework. It does not contain any classes or functions, but rather defines several color values that can be used throughout the app\\u0027s user interface.\\n\\n`Purple200`: A light purple color.\\n`Purple500`: A medium purple color.\\n`Purple700`: A dark purple color.\\n`Teal200`: A teal color.\\n`red200`: A red color.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/LoginActivity.kt\&quot;:\&quot;This file contains the implementation of a login screen for a news headlines application.\\n\\n`LoginActivity`: This class is the main activity that sets up the login screen.\\n\\n`LoginScreen`: This composable function defines the UI and logic for the login screen.\\n\\nThe file does the following:\\n1. Defines the login screen UI with input fields for username and password, and buttons for login and registration.\\n2. Handles the login logic by checking the user\\u0027s credentials against the database and navigating to the main page upon successful login.\\n3. Provides error handling for invalid inputs and login failures.\\n4. Includes navigation to the registration screen and a \\\&quot;forgot password\\\&quot; feature.\&quot;,\&quot;/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml\&quot;:\&quot;This file is an XML configuration for an Android adaptive icon. It does not contain any classes or functions, but rather defines the background, foreground, and monochrome elements of the adaptive icon.\\n\\n`adaptive-icon`: This element defines the adaptive icon configuration, which allows the icon to be displayed correctly on different Android devices and screen sizes.\\n\\n`background`: This element specifies the drawable resource to be used as the background of the adaptive icon.\\n\\n`foreground`: This element specifies the drawable resource to be used as the foreground of the adaptive icon.\\n\\n`monochrome`: This element specifies the drawable resource to be used as the monochrome version of the adaptive icon, which is used in certain contexts such as the app launcher.\&quot;,\&quot;/app/src/main/java/com/example/newsheadlines/News.kt\&quot;:\&quot;This file defines a data class `News` that represents the response from a news API. The class has the following properties:\\n\\n`News`: A data class that represents the response from a news API, containing the overall status, total number of results, and a list of `Articles`.\\n\\nThe file does not contain any functions, but rather defines the structure of the `News` data class using the `@SerializedName` annotations to map the JSON response to the class properties.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/LOQ/Desktop/NM-PROJECT/NewsHeadlines-main&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/newsheadlines/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/newsheadlines/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Color.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Color.kt\&quot;,\&quot;file_name\&quot;:\&quot;Color.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Shape.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Shape.kt\&quot;,\&quot;file_name\&quot;:\&quot;Shape.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Theme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Theme.kt\&quot;,\&quot;file_name\&quot;:\&quot;Theme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Type.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/ui/theme/Type.kt\&quot;,\&quot;file_name\&quot;:\&quot;Type.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/ApiService.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/ApiService.kt\&quot;,\&quot;file_name\&quot;:\&quot;ApiService.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/Articles.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/Articles.kt\&quot;,\&quot;file_name\&quot;:\&quot;Articles.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/DisplayNews.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/DisplayNews.kt\&quot;,\&quot;file_name\&quot;:\&quot;DisplayNews.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/LoginActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/LoginActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/MainPage.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/MainPage.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainPage.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/MainViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/MainViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/Model.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/Model.kt\&quot;,\&quot;file_name\&quot;:\&quot;Model.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/News.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/News.kt\&quot;,\&quot;file_name\&quot;:\&quot;News.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/RegistrationActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/RegistrationActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegistrationActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/Source.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/Source.kt\&quot;,\&quot;file_name\&quot;:\&quot;Source.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/User.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/User.kt\&quot;,\&quot;file_name\&quot;:\&quot;User.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/UserDao.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/UserDao.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserDao.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabase.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabase.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserDatabase.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabaseHelper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/newsheadlines/UserDatabaseHelper.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserDatabaseHelper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/ic_launcher_background.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_background.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable/news_background.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable/news_background.xml\&quot;,\&quot;file_name\&quot;:\&quot;news_background.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_foreground.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher_round.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/news.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/news.xml\&quot;,\&quot;file_name\&quot;:\&quot;news.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v26/news_round.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v26/news_round.xml\&quot;,\&quot;file_name\&quot;:\&quot;news_round.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/mipmap-anydpi-v33/ic_launcher.xml\&quot;,\&quot;file_name\&quot;:\&quot;ic_launcher.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/colors.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/colors.xml\&quot;,\&quot;file_name\&quot;:\&quot;colors.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/strings.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/strings.xml\&quot;,\&quot;file_name\&quot;:\&quot;strings.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/values/themes.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/values/themes.xml\&quot;,\&quot;file_name\&quot;:\&quot;themes.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/xml/backup_rules.xml\&quot;,\&quot;file_name\&quot;:\&quot;backup_rules.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/res/xml/data_extraction_rules.xml\&quot;,\&quot;file_name\&quot;:\&quot;data_extraction_rules.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/AndroidManifest.xml\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/AndroidManifest.xml\&quot;,\&quot;file_name\&quot;:\&quot;AndroidManifest.xml\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/newsheadlines/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/newsheadlines/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>